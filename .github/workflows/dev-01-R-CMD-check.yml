name: Dev branch R-CMD-check on Mac

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
      
jobs:
  dev-R-CMD-check:
  
    runs-on:  macOS-latest
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      SALESFORCER_USERNAME: ${{ secrets.SALESFORCER_USERNAME }}
      SALESFORCER_TOKEN_PATH: ${{ github.workspace }}/tests/testthat/
      
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt OAuth Token secret
        run: |
          ./.github/scripts/decrypt_secret.sh
          ls $SALESFORCER_TOKEN_PATH
        env:
          SALESFORCER_TOKEN_PASSPHRASE: ${{ secrets.SALESFORCER_TOKEN_PASSPHRASE }}
      
      - name: Reveal env vars
        run: |
          echo GITHUB_WORKFLOW   = $GITHUB_WORKFLOW
          echo HOME              = $HOME
          echo GITHUB_ACTION     = $GITHUB_ACTION
          echo GITHUB_ACTIONS    = $GITHUB_ACTIONS
          echo GITHUB_ACTOR      = $GITHUB_ACTOR
          echo GITHUB_REPOSITORY = $GITHUB_REPOSITORY
          echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME
          echo GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH
          echo GITHUB_WORKSPACE  = $GITHUB_WORKSPACE
          echo GITHUB_SHA        = $GITHUB_SHA
          echo GITHUB_REF        = $GITHUB_REF
      
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
          
      - uses: r-lib/actions/setup-pandoc@v1
      
      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}
        
      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: macOS-r-4.0-2-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: macOS-r-4.0-2-
          
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false       
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: macOS-latest-r-release-results
          path: check
